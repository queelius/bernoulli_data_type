Fuzzy sets are a super-set of classical (crisp) sets. In a \emph{fuzzy set}, an element has a degree-of-membership between $0$ and $1$. Classical sets are a special case of fuzzy sets where all elements either have $0$ degree-of-membership or $1$ degree-of-membership.

The fuzzy \emph{approximate} set\cite{faset}.

The \emph{approximate map} may be used to implement \emph{fuzzy} approximate sets.

The \emph{approximate map} may be used to implement \emph{approximate fuzzy sets}, where the keys are set elements and the associated values encode degree-of-membership values.

Suppose the values are $p$ bits. Then, let the degree-of-membership be with respect to a function
\begin{equation}
    \operatorname{u} \colon \cisb_P \mapsto [0,1]\,,
\end{equation}
which maps the $P$ bits associated with a particular element $x \in \Sp$ to a degree-of-membership.\footnote{An element $x \notin \Sp$ has $0$ membership in $\Sp$.}
\begin{example}
Let the $p$ bits $b_1, \ldots, b_P$ encode an unsigned integer between $0$ and $2^p-1$. Then,
\begin{equation}
    \operatorname{u}\!\left(b_1, \ldots, b_p\right) = \frac{\sum_{j=1}^{P} 2^{j-1} b_j}{2^P-1}
\end{equation}
maps those $p$ bits to a rational number between $0$ and $1$.
\end{example}









The set theoretic grammar described in \Cref{tbl:set_grammar} can be extended to support fuzzy set-theoretic constructs.
\begin{table}[H]
\caption{BNF fuzzy set-theoretic grammar}
\label{tbl:fuzzy_set_grammar}
\centering
\begin{tabular}{ p{1in} p{0.2in} p{2.9in} }
\hline
    <query>        & ::= & <atomic query> | (<query>)\\
                   &     & <unary op>(<query>) |\\
                   &     & <binary op>(<query>, <query>)\\
    <atomic query> & ::= & <term> | <term> <atomic query>\\
    <term>         & ::= & <exact phrase> | <keyword>\\
    <unary op>     & ::= & $\notfn$ | $\cdots$\\
    <binary op>    & ::= & $\andfn$ | $\orfn$ | $\cdots$\\
    <exact phrase> & ::= & ``<keywords>''\\
    <keywords>     & ::= & <keyword> | <keyword> <keywords>\\
    <keyword>      & ::= & <alphanumeric> | <alphanumeric> <keyword>\\
    <alphanumeric> & ::= & a|b|$\cdots$|z|0|1|$\cdots$|9\\
\hline
\end{tabular}
\end{table}






-----------
moved from approx hash map paper

\subsection{Approximate fuzzy set}
\label{sec:extensions:fuzzyset}
Suppose we have a collection of sets, denoted the universe $\Set{D}$. Set-theoretic queries operate on subsets of $\Set{D}$. All set-theoretic queries are reducible to compositions of \emph{set complement} and \emph{set intersection}. Set complement is given by
\begin{equation}
    \notfn\!\left(\Set{A}\right) = \left\{\Set{Z} \in \Set{U} \colon \Set{Z} \notin \Set{A}\right\}
\end{equation}
and set intersection is given by
\begin{equation}
    \andfn\!\left(\Set{A}, \Set{B}\right) = \left\{\Set{Z} \in \Set{U} \colon \text{$\Set{Z} \in \Set{A}$ and $\Set{Z} \in \Set{B}$}\right\}\,,
\end{equation}
where $\Set{A}$ and $\Set{B}$ are subsets of $\Set{U}$.

A recursive query language may support arbitrarily complex set-theoretic queries as given by BNF~\ref{bnf:set_theoretic}.
\begin{figure}
\caption{BNF of set-theoretic query grammar}
\label{bnf:set_theoretic}
\begin{bnf*}
    \bnfprod{query}
        \bnftd{a membership test} \bnfor \bnfpn{unary exp} \bnfor \bnfpn{binary exp}\\
    \bnfprod{unary exp} \bnfpn{unary op} \bnfts{(}\bnfpn{query}\bnfts{)}\\
    \bnfprod{binary exp}
        \bnfpn{binary op} \bnfts{(}\bnfpn{query}\bnfts{,}\bnfpn{query}\bnfts{)}\\
    \bnfprod{unary op} \bnfts{$\notfn$} \bnfor \bnfts{$\PowerSetFn$} \bnfor \bnfsk\\
    \bnfprod{binary op} \bnfts{$\andfn$} \bnfor \bnfts{$\orfn$} \bnfor \bnfts{$\diffn$} \bnfor \bnfsk
\end{bnf*}
\end{figure}

\begin{example}
Suppose we are interested in those sets which contain element $x$ but not element $y$, or those sets which contain element $y$. We may reduce this query to the following composition. Let
\begin{equation*}
    \Set{A} = \left\{ \Set{Z} \in \Set{U} \colon \Has(\Set{Z},x) \right\}
\end{equation*}
and
\begin{equation*}
    \Set{B} = \left\{ \Set{Z} \in \Set{U} \colon \Has(\Set{Z},y) \right\}\,,
\end{equation*}
which are the result of simple membership tests. Given these sets, we are interested in the set
\begin{equation*}
    \Set{C} = \orfn\!\left(\diffn\!\left(\Set{A}, \Set{B}\right),\Set{B}\right)\,.
\end{equation*}
\end{example}

Fuzzy sets are a super-set of  classical (crisp) sets. In a \emph{fuzzy set}, an element has a degree-of-membership between $0$ and $1$. Classical sets are a special case of fuzzy sets where all elements either have $0$ degree-of-membership or $1$ degree-of-membership.

The \emph{approximate map} may be used to implement \emph{approximate fuzzy sets}, where the keys are set elements and the associated values encode degree-of-membership values.

Suppose the values are $p$ bits. Then, let the degree-of-membership be with respect to a function
\begin{equation}
    \operatorname{u} \colon \cisb_P \mapsto [0,1]\,,
\end{equation}
which maps the $P$ bits associated with a particular element $x \in \Sp$ to a degree-of-membership.\footnote{An element $x \notin \Sp$ has $0$ membership in $\Sp$.}
\begin{example}
Let the $p$ bits $b_1, \ldots, b_P$ encode an unsigned integer between $0$ and $2^p-1$. Then,
\begin{equation}
    \operatorname{u}\!\left(b_1, \ldots, b_p\right) = \frac{\sum_{j=1}^{P} 2^{j-1} b_j}{2^P-1}
\end{equation}
maps those $p$ bits to a rational number between $0$ and $1$.
\end{example}

Fuzzy set-theoretic queries operate on degree-of-membership values given by $\operatorname{u}$. Fuzzy operator equivalents to Boolean $\notfn$, $\orfn$, and $\andfn$ are given by
\begin{align}
    \notfn(x) &= 1 - x\,,\\
    \orfn(x, y) &= \max(x, y)\,,\\
    \andfn(x, y) &= \min(x, y)\,,
\end{align}
where $x$ and $y$ are degree-of-membership values.

A hedge function transforms degree-of-membership values as demonstrated by the following example.
\begin{example}
It may be true that an element is a member of a set $\Set{S}$ but it may not be \emph{very} true. If we are interested in sets in which it is \emph{very} true that an element is a member, then the hedge function given by
\begin{equation}
    \very(x) = x^2
\end{equation}
makes the appropriate transformation since $\True\left(\very(x)\right)$ is \emph{false} for larger values of $x$ than $\True(x)$.
\end{example}

A Boolean membership test is eventually needed, in which case defuzzification transforms degree-of-membership values into crisp $\True$ or $\False$ values. For instance,
\begin{equation}
    \True(x) = x \geq K\,,
\end{equation}
where $K \in [0,1]$, transforms degree-of-membership values larger than $K$ to $\True$ and otherwise $\False$. At this point, standard set-theoretic queries as given by BNF~\ref{bnf:set_theoretic} may be used.
\end{document}
